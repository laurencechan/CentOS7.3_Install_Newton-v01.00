#!/bin/bash
#log function
if [  -e $PWD/lib/newton-log ]
then	
	source $PWD/lib/newton-log
else
	echo -e "\033[41;37m $PWD/lib/newton-log is not exist. \033[0m"
	exit 1
fi

#input variable
if [  -e $PWD/lib/installrc ]
then	
	source $PWD/lib/installrc 
else
	echo -e "\033[41;37m $PWD/lib/installrc is not exist. \033[0m"
	exit 1
fi

if [  -e $PWD/lib/SaveRandPasswd ]
then	
	source $PWD/lib/SaveRandPasswd 
else
	echo -e "\033[41;37m $PWD/lib/SaveRandPasswd is not exist. \033[0m"
	exit 1
fi

if [  -e /etc/openstack-newton_tag/computer.tag  ]
then
	echo -e "\033[41;37m Oh no ! you can't execute this script on computer node.  \033[0m"
	log_error "Oh no ! you can't execute this script on computer node. "
	exit 1 
fi

if [ -f  /etc/openstack-newton_tag/config_keystone.tag ]
then 
	log_info "keystone have installed ."
else
	echo -e "\033[41;37m you should install keystone first. \033[0m"
	exit 1
fi

if [ -f  /etc/openstack-newton_tag/install_swift.tag ]
then 
	echo -e "\033[41;37m you haved install swift \033[0m"
	log_info "you haved install swift."	
	exit
fi

unset http_proxy https_proxy ftp_proxy no_proxy 
source /root/admin-openrc.sh 
USER_SWIFT=`openstack user list | grep swift | awk -F "|" '{print$3}' | awk -F " " '{print$1}'`
if [ ${USER_SWIFT}x = swiftx ]
then
	log_info "openstack user had created  swift"
else
	openstack user create  --domain default swift  --password ${SWIFT_PASSWORD}
	fn_log "openstack user create  --domain default swift  --password ${SWIFT_PASSWORD}"
	openstack role add --project service --user swift admin
	fn_log "openstack role add --project service --user swift admin"
fi

SERVICE_SWIFT=`openstack service list | grep swift | awk -F "|" '{print$3}' | awk -F " " '{print$1}'`
if [  ${SERVICE_SWIFT}x = swiftx ]
then 
	log_info "openstack service create swift."
else
    openstack service create --name swift --description "OpenStack Object Storage" object-store
	fn_log "openstack service create --name swift --description "OpenStack Object Storage" object-store"
fi

ENDPOINT_LIST_INTERNAL=`openstack endpoint list | grep object-store  |grep internal | wc -l`
ENDPOINT_LIST_PUBLIC=`openstack endpoint list | grep object-store   |grep public | wc -l`
ENDPOINT_LIST_ADMIN=`openstack endpoint list | grep object-store   |grep admin | wc -l`
if [  ${ENDPOINT_LIST_INTERNAL}  -eq 1  ]  && [ ${ENDPOINT_LIST_PUBLIC}  -eq  1   ] &&  [ ${ENDPOINT_LIST_ADMIN} -eq 1  ]

then
	log_info "openstack endpoint create swift."
else
	openstack endpoint create --region  ${REGION_NAME}   object-store public http://${HOST_NAME}:8080/v1/AUTH_%\(tenant_id\)s && openstack endpoint create --region ${REGION_NAME}   object-store internal http://${HOST_NAME}:8080/v1/AUTH_%\(tenant_id\)s &&   openstack endpoint create --region  ${REGION_NAME}   object-store admin http://${HOST_NAME}:8080/v1/AUTH_%\(tenant_id\)s
	fn_log "openstack endpoint create --region  ${REGION_NAME}   object-store public http://${HOST_NAME}:8080/v1/AUTH_%\(tenant_id\)s && openstack endpoint create --region ${REGION_NAME}   object-store internal http://${HOST_NAME}:8080/v1/AUTH_%\(tenant_id\)s &&   openstack endpoint create --region  ${REGION_NAME}   object-store admin http://${HOST_NAME}:8080/v1/AUTH_%\(tenant_id\)s"
fi

#test network
function fn_test_network () {
if [ -f $PWD/lib/proxy.sh ]
then 
	source  $PWD/lib/proxy.sh
fi
curl www.baidu.com >/dev/null   
fn_log "curl www.baidu.com >/dev/null"
}

if  [ -f /etc/yum.repos.d/newton.repo ]
then
	log_info " use local yum."
else 
	fn_test_network
fi

function fn_install_swift () {
yum clean all && yum install openstack-swift-proxy python-swiftclient python-keystoneclient python-keystonemiddleware memcached -y
fn_log "yum clean all && yum install openstack-swift-proxy python-swiftclient python-keystoneclient python-keystonemiddleware memcached -y"
}
OPENSTACKSWIFT_COUNT=`rpm -aq | grep openstack-swift* | wc -l`
if [ $OPENSTACKSWIFT_COUNT -ne 0 ]
then
     log_info "openstack-swift* had installed."
else
     fn_install_swift
fi

unset http_proxy https_proxy ftp_proxy no_proxy 
mkdir -p /etc/swift
fn_log "mkdir -p /etc/swift"
cp -a $PWD/lib/swift/proxy-server.conf /etc/swift/
fn_log "cp -a $PWD/lib/swift/proxy-server.conf /etc/swift/"

[ -f /etc/swift/proxy-server.conf_bak ] || cp -a /etc/swift/proxy-server.conf{,_bak}
openstack-config --set /etc/swift/proxy-server.conf filter:authtoken auth_uri http://${HOST_NAME}:5000 && openstack-config --set /etc/swift/proxy-server.conf filter:authtoken auth_url http://${HOST_NAME}:35357 && openstack-config --set /etc/swift/proxy-server.conf filter:authtoken memcached_servers ${HOST_NAME}:11211 && openstack-config --set /etc/swift/proxy-server.conf filter:authtoken password ${SWIFT_PASSWORD} && openstack-config --set /etc/swift/proxy-server.conf filter:cache memcache_servers ${HOST_NAME}:11211
fn_log "openstack-config --set /etc/swift/proxy-server.conf filter:authtoken auth_uri http://${HOST_NAME}:5000 && openstack-config --set /etc/swift/proxy-server.conf filter:authtoken auth_url http://${HOST_NAME}:35357 && openstack-config --set /etc/swift/proxy-server.conf filter:authtoken memcached_servers ${HOST_NAME}:11211 && openstack-config --set /etc/swift/proxy-server.conf filter:authtoken password ${SWIFT_PASSWORD} && openstack-config --set /etc/swift/proxy-server.conf filter:cache memcache_servers ${HOST_NAME}:11211"

#object-store
function fn_create_object_store_node () {
function fn_install_xfsprogs () {
yum clean all && yum install xfsprogs -y  
fn_log "yum clean all && yum install xfsprogs -y"
}
XFSPROGS_COUNT=`rpm -aq | grep xfsprogs | wc -l`
if [ $XFSPROGS_COUNT -ne 0 ]
then
     log_info "xfsprogs had installed."
else
     fn_install_xfsprogs
fi

function fn_install_rsync () {
yum clean all && yum install -y rsync
fn_log "yum clean all && yum install -y rsync"
}
RSYNC_COUNT=`rpm -aq | grep rsync | wc -l`
if [ $RSYNC_COUNT -ne 0 ]
then
     log_info "rsync had installed."
else
     fn_install_rsync
fi

if [ -z ${OBJECT_DISK_ONE} ] && [ -z ${OBJECT_DISK_TWO} ] && [ -z ${OBJECT_DISK_THR} ]
then 
	log_info "there is not Three disk for swift."
	return 1
else
	 mkfs.xfs -f ${OBJECT_DISK_ONE} && mkfs.xfs -f ${OBJECT_DISK_TWO} && mkfs.xfs -f ${OBJECT_DISK_THR}
	fn_log " mkfs.xfs -f ${OBJECT_DISK_ONE} && mkfs.xfs -f ${OBJECT_DISK_TWO} && mkfs.xfs -f ${OBJECT_DISK_THR}"
	mkdir -p /srv/node/data_{a,b,c}
	fn_log "mkdir -p /srv/node/data_{a,b,c}"
	DATA_COUNT=`grep "data_*" /etc/fstab | wc -l`
	if [ $DATA_COUNT -ne 0 ]
	then
	log_info "data had cofng."
	else
	cat >>/etc/fstab<<EOF
${OBJECT_DISK_ONE} /srv/node/data_a xfs noatime,nodiratime,nobarrier,logbufs=8 0 2
${OBJECT_DISK_TWO} /srv/node/data_b xfs noatime,nodiratime,nobarrier,logbufs=8 0 2
${OBJECT_DISK_THR} /srv/node/data_c xfs noatime,nodiratime,nobarrier,logbufs=8 0 2
EOF
	fi
	 mount /srv/node/data_a && mount /srv/node/data_b && mount /srv/node/data_c
	 cat >/etc/rsyncd.conf<<EOF
uid = swift
gid = swift
log file = /var/log/rsyncd.log
pid file = /var/run/rsyncd.pid
address = ${MANAGER_IP}

[account]
max connections = 2
path = /srv/node/
read only = False
lock file = /var/lock/account.lock

[container]
max connections = 2
path = /srv/node/
read only = False
lock file = /var/lock/container.lock

[object]
max connections = 2
path = /srv/node/
read only = False
lock file = /var/lock/object.lock
EOF
systemctl enable rsyncd.service && systemctl start rsyncd.service
fn_log "systemctl enable rsyncd.service && systemctl start rsyncd.service"
fi

function fn_install_swift_store () {
yum clean all && yum install openstack-swift-account openstack-swift-container openstack-swift-object -y
fn_log "yum clean all && yum clean all && yum install openstack-swift-account openstack-swift-container openstack-swift-object -y"
}
SWIFT_ACCOUNT_COUNT=`rpm -aq | grep openstack-swift-account | wc -l`
if [ $SWIFT_ACCOUNT_COUNT -ne 0 ]
then
     log_info "openstack-swift-account had installed."
else
     fn_install_swift_store
fi

cp -a $PWD/lib/swift/account-server.conf /etc/swift/
cp -a $PWD/lib/swift/container-server.conf /etc/swift/
cp -a $PWD/lib/swift/object-server.conf /etc/swift/

openstack-config --set /etc/swift/account-server.conf DEFAULT bind_ip ${MANAGER_IP}
fn_log "config /etc/swift/account-server.conf"
openstack-config --set /etc/swift/container-server.conf DEFAULT bind_ip ${MANAGER_IP}
fn_log "config /etc/swift/container-server.conf"
openstack-config --set /etc/swift/object-server.conf DEFAULT bind_ip ${MANAGER_IP}
fn_log "config /etc/swift/object-server.conf"
chown -R swift:swift /srv/node
mkdir -p /var/cache/swift
chown -R root:swift /var/cache/swift
chmod -R 775 /var/cache/swift

#controller create rings
cd /etc/swift
swift-ring-builder account.builder create 10 3 1
swift-ring-builder container.builder create 10 3 1
swift-ring-builder object.builder create 10 3 1

for DEVICE_NAME in `cat /etc/fstab |grep data_|awk -F " " '{print$1}'|awk -F "/" '{print$3}'`
do
{
  swift-ring-builder account.builder add --region 1 --zone 1 --ip ${MANAGER_IP} --port 6202 --device ${DEVICE_NAME} --weight 100
  swift-ring-builder container.builder add --region 1 --zone 1 --ip ${MANAGER_IP} --port 6201 --device ${DEVICE_NAME} --weight  100
  swift-ring-builder object.builder add --region 1 --zone 1 --ip ${MANAGER_IP} --port 6200 --device ${DEVICE_NAME} --weight  100
}
done
swift-ring-builder account.builder
swift-ring-builder container.builder
swift-ring-builder object.builder
swift-ring-builder account.builder rebalance
swift-ring-builder container.builder rebalance
swift-ring-builder object.builder rebalance
#每个存储节点和运行代理服务的其他节点上
#scp *ring.gz root@IP:/etc/swift/
#ssh root@IP "chown -R swift:swift /etc/swift"
#chown -R root:swift /etc/swift
cd -
}
if [ -z ${OBJECT_DISK_ONE} ] && [ -z ${OBJECT_DISK_TWO} ] && [ -z ${OBJECT_DISK_THR} ]
then 
	log_info "there is not Three disk for swift."
	return 1
else
    fn_create_object_store_node
fi

cp -a $PWD/lib/swift/swift.conf /etc/swift/
HASH_PATH_SUFFIX=$(openssl rand -hex 10)
HASH_PATH_PREFIX=$(openssl rand -hex 10)
openstack-config --set /etc/swift/swift.conf swift-hash swift_hash_path_suffix ${HASH_PATH_SUFFIX}
openstack-config --set /etc/swift/swift.conf swift-hash swift_hash_path_prefix ${HASH_PATH_PREFIX}
fn_log "cofnig /etc/swift/swift.conf"
#每个存储节点和运行代理服务的其他节点上
#scp /etc/swift/swift.conf root@IP:/etc/swift
#ssh root@IP "chown -R root:swift /etc/swift"
chown -R root:swift /etc/swift
systemctl enable openstack-swift-proxy.service memcached.service && systemctl start openstack-swift-proxy.service memcached.service
fn_log "systemctl enable openstack-swift-proxy.service memcached.service && systemctl start openstack-swift-proxy.service memcached.service"

function fn_start_object_store_node () {
systemctl enable openstack-swift-account.service openstack-swift-account-auditor.service openstack-swift-account-reaper.service openstack-swift-account-replicator.service
fn_log "systemctl enable openstack-swift-account.service openstack-swift-account-auditor.service openstack-swift-account-reaper.service openstack-swift-account-replicator.service"
systemctl start openstack-swift-account.service openstack-swift-account-auditor.service openstack-swift-account-reaper.service openstack-swift-account-replicator.service
fn_log "systemctl start openstack-swift-account.service openstack-swift-account-auditor.service openstack-swift-account-reaper.service openstack-swift-account-replicator.service"
systemctl enable openstack-swift-container.service openstack-swift-container-auditor.service openstack-swift-container-replicator.service openstack-swift-container-updater.service
fn_log "systemctl enable openstack-swift-container.service openstack-swift-container-auditor.service openstack-swift-container-replicator.service openstack-swift-container-updater.service"
systemctl start openstack-swift-container.service openstack-swift-container-auditor.service openstack-swift-container-replicator.service openstack-swift-container-updater.service
fn_log "systemctl start openstack-swift-container.service openstack-swift-container-auditor.service openstack-swift-container-replicator.service openstack-swift-container-updater.service"
systemctl enable openstack-swift-object.service openstack-swift-object-auditor.service openstack-swift-object-replicator.service openstack-swift-object-updater.service
fn_log "systemctl enable openstack-swift-object.service openstack-swift-object-auditor.service openstack-swift-object-replicator.service openstack-swift-object-updater.service"
systemctl start openstack-swift-object.service openstack-swift-object-auditor.service openstack-swift-object-replicator.service openstack-swift-object-updater.service
fn_log "systemctl start openstack-swift-object.service openstack-swift-object-auditor.service openstack-swift-object-replicator.service openstack-swift-object-updater.service"

#存在object_store_node验证
. /root/demo-openrc.sh
swift stat
fn_log "swift stat"
openstack container create container1
fn_log "openstack container create container1"
touch test
openstack object create container1 test
fn_log "openstack object create container1 test"
openstack object list container1
fn_log "openstack object list container1"
#openstack object save container1 test
#fn_log "openstack object save container1 test"
}
SWIFT_OBJECT_COUNT=`rpm -aq | grep openstack-swift-object | wc -l`
if [ "${SWIFT_OBJECT_COUNT}"  -ne 0 ]
then
	fn_start_object_store_node
else
	log_info "openstack-swift-object no had installl."
fi

echo -e "\033[32m ##############################################\033[0m"
echo -e "\033[32m ###        Install Swift Sucessed          ###\033[0m"
echo -e "\033[32m ##############################################\033[0m"

if  [ ! -d /etc/openstack-newton_tag ]
then 
	mkdir -p /etc/openstack-newton_tag  
fi
echo `date "+%Y-%m-%d %H:%M:%S"` >/etc/openstack-newton_tag/install_swift.tag