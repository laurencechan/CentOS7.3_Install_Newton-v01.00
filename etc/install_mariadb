#!/bin/bash
#日志功能
if [  -e $PWD/lib/newton-log ]
then	
	source $PWD/lib/newton-log
else
	echo -e "\033[41;37m $PWD/lib/newton-log is not exist. \033[0m"
	exit 1
fi

#输入环境变量
if [  -e $PWD/lib/installrc ]
then	
	source $PWD/lib/installrc 
else
	echo -e "\033[41;37m $PWD/lib/installrc is not exist. \033[0m"
	exit 1
fi
#生成的随机密码
if [  -e $PWD/lib/SaveRandPasswd ]
then	
	source $PWD/lib/SaveRandPasswd 
else
	echo -e "\033[41;37m $PWD/lib/SaveRandPasswd is not exist. \033[0m"
	exit 1
fi

if [  -e /etc/openstack-newton_tag/computer.tag  ]
then
	echo -e "\033[41;37m Oh no ! you can't execute this script on computer node.  \033[0m"
	log_error "Oh no ! you can't execute this script on computer node. "
	exit 1 
fi

if [ -f  /etc/openstack-newton_tag/presystem.tag ]
then 
	log_info "config system have installed ."
else
	echo -e "\033[41;37m you should config system first. \033[0m"
	exit 1
fi

if [ -f  /etc/openstack-newton_tag/install_mariadb.tag ]
then 
	echo -e "\033[41;37m you haved config Basic environment \033[0m"
	log_info "you had install mariadb."	
	exit
fi

#test network
function fn_test_network () {
if [ -f $PWD/lib/proxy.sh ]
then 
	source $PWD/lib/proxy.sh
fi
curl www.baidu.com >/dev/null   
fn_log "curl www.baidu.com >/dev/null "
}

if  [ -f /etc/yum.repos.d/newton.repo ]
then
	log_info " use local yum."
else 
	fn_test_network
fi

function fn_install_mariadb () {
yum clean all &&  yum install mariadb mariadb-server python2-PyMySQL  -y
fn_log "yum clean all &&  yum install mariadb mariadb-server python2-PyMySQL  -y"
rm -rf /etc/my.cnf.d/openstack.cnf && cp -a $PWD/lib/mariadb_openstack.cnf /etc/my.cnf.d/openstack.cnf
fn_log "cp -a $PWD/lib/mariadb_openstack.cnf /etc/my.cnf.d/openstack.cnf"
echo " " >>/etc/my.cnf.d/openstack.cnf
echo "bind-address = ${MANAGER_IP}" >>/etc/my.cnf.d/openstack.cnf
sed -i "36a LimitNOFILE=65535" /usr/lib/systemd/system/mariadb.service
sed -i "37a LimitNPROC=65535" /usr/lib/systemd/system/mariadb.service
sed -i "s@/mysqld@/mysqld --defaults-file=/etc/my.cnf@g" /usr/lib/systemd/system/mariadb.service
#start mariadb
systemctl enable mariadb.service && systemctl daemon-reload && systemctl start mariadb.service 
fn_log "systemctl enable mariadb.service && systemctl daemon-reload && systemctl start mariadb.service"
mysql_secure_installation <<EOF

y
${MARIADB_PASSWORD}
${MARIADB_PASSWORD}
y
y
y
y
EOF
mysql -uroot -p${MARIADB_PASSWORD} -e "GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '${MARIADB_PASSWORD}';"
fn_log "mysql_secure_installation"
}

MARIADB_STATUS=`service mariadb status | grep Active | awk -F "("  '{print$2}' | awk -F ")"  '{print$1}'`
if [ "${MARIADB_STATUS}"  = running ]
then
	log_info "mairadb had installl."
else
	fn_install_mariadb
fi

function fn_install_openstackclient () {
yum install python-openstackclient -y
fn_log "yum install python-openstackclient -y"
}
OPENSTACKCLIENT_COUNT=`rpm -aq |grep python-openstackclient|wc -l`
if [$OPENSTACKCLIENT_COM -ne 0]
then
     log_info "python-openstackclient had installed."
else
     fn_install_openstackclient
fi

function fn_install_openstack-selinux () {
yum clean all -y && yum install openstack-selinux -y
fn_log "yum clean all && yum install openstack-selinux -y"
}
OPENSTACKSELINUX_COUNT=`rpm -aq |grep openstack-selinux|wc -l`
if [ $OPENSTACKSELINUX_COUNT -ne 0 ]
then
     log_info "openstack-selinux had installed."
else
     fn_install_openstack-selinux
fi

function fn_install_rabbit () {
yum clean all && yum install rabbitmq-server -y
fn_log "yum clean all && yum install rabbitmq-server -y"
#start rabbitmq-server.service
HOSTNAME=${HOST_NAME}
fn_log "HOSTNAME=${HOST_NAME}"
sed -i "11a LimitNOFILE=30000" /usr/lib/systemd/system/rabbitmq-server.service
systemctl enable rabbitmq-server.service &&  systemctl start rabbitmq-server.service 
fn_log "systemctl enable rabbitmq-server.service &&  systemctl start rabbitmq-server.service"
rabbitmqctl add_user ${RABBITMQ_USER} ${RABBITMQ_PASSWORD}
fn_log "rabbitmqctl add_user ${RABBITMQ_USER} ${RABBITMQ_PASSWORD}"
rabbitmqctl set_permissions ${RABBITMQ_USER} ".*" ".*" ".*"
fn_log "rabbitmqctl set_permissions ${RABBITMQ_USER} ".*" ".*" ".*""
systemctl restart rabbitmq-server.service
fn_log "systemctl restart rabbitmq-server.service"
rabbitmq-plugins enable rabbitmq_management mochiweb webmachine rabbitmq_web_dispatch amqp_client rabbitmq_management_agent
}

function fn_test_rabbit () {
RABBIT_STATUS=`rabbitmqctl list_users | grep ${RABBITMQ_USER} | awk -F " " '{print$1}'`
if [ ${RABBIT_STATUS}x  = ${RABBITMQ_USER}x ]
then 
	log_info "rabbit had installed."
else
	fn_install_rabbit
fi
}

if [ -f /usr/sbin/rabbitmqctl  ]
then
	log_info "rabbit had installed."
else
	fn_test_rabbit
fi

function fn_install_memcache (){
yum  -y install memcached python-memcached
fn_log "yum  -y install memcached python-memcached"

cp -a /etc/sysconfig/memcached{,_bak}
fn_log "cp -a /etc/sysconfig/memcached{,_bak}"

sed  -i "s#127.0.0.1#${HOST_NAME}#g" /etc/sysconfig/memcached
fn_log "sed  -i "s#127.0.0.1#${HOST_NAME}#g" /etc/sysconfig/memcached"

systemctl enable memcached.service && systemctl restart memcached.service
fn_log "systemctl enable memcached.service && systemctl restart memcached.service"
}

MEMCACHED_STATUS=`service memcached status | grep Active | awk -F "("  '{print$2}' | awk -F ")"  '{print$1}'`
if [ "${MEMCACHED_STATUS}"  = running ]
then
	log_info "memcache had installl."
else
	fn_install_memcache
fi

echo -e "\033[32m ################################################ \033[0m"
echo -e "\033[32m ###   Install Mariadb and Rabbitmq Sucessed.#### \033[0m"
echo -e "\033[32m ################################################ \033[0m"

if  [ ! -d /etc/openstack-newton_tag ]
then 
	mkdir -p /etc/openstack-newton_tag  
fi
echo `date "+%Y-%m-%d %H:%M:%S"` >/etc/openstack-newton_tag/install_mariadb.tag
